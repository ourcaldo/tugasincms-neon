-- Table for managing custom post types
CREATE TABLE IF NOT EXISTS custom_post_types (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  slug VARCHAR(100) UNIQUE NOT NULL,
  name VARCHAR(100) NOT NULL,
  singular_name VARCHAR(100) NOT NULL,
  plural_name VARCHAR(100) NOT NULL,
  description VARCHAR(500),
  icon VARCHAR(100),
  is_enabled BOOLEAN DEFAULT false,
  menu_position INTEGER DEFAULT 0,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert default Post CPT (always enabled)
INSERT INTO custom_post_types (slug, name, singular_name, plural_name, description, icon, is_enabled, menu_position)
VALUES ('post', 'Post', 'Post', 'Posts', 'Standard blog posts', 'FileText', true, 1)
ON CONFLICT (slug) DO NOTHING;

-- Insert Job Post CPT (disabled by default)
INSERT INTO custom_post_types (slug, name, singular_name, plural_name, description, icon, is_enabled, menu_position)
VALUES ('job', 'Job Post', 'Job Post', 'Job Posts', 'Job posting listings', 'Briefcase', false, 2)
ON CONFLICT (slug) DO NOTHING;

-- Add post_type column to posts table
ALTER TABLE posts 
ADD COLUMN IF NOT EXISTS post_type VARCHAR(100) DEFAULT 'post';

-- Create index for faster filtering by post type
CREATE INDEX IF NOT EXISTS idx_posts_post_type ON posts(post_type);

-- Add foreign key constraint (optional, for data integrity)
ALTER TABLE posts
ADD CONSTRAINT fk_posts_post_type 
FOREIGN KEY (post_type) REFERENCES custom_post_types(slug)
ON UPDATE CASCADE
ON DELETE RESTRICT;

-- Job categories table
CREATE TABLE IF NOT EXISTS job_categories (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(100) NOT NULL,
  slug VARCHAR(200) UNIQUE NOT NULL,
  description VARCHAR(500),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Job tags table
CREATE TABLE IF NOT EXISTS job_tags (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(100) NOT NULL,
  slug VARCHAR(200) UNIQUE NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Job employment types
CREATE TABLE IF NOT EXISTS job_employment_types (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(100) NOT NULL,
  slug VARCHAR(100) UNIQUE NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert default employment types
INSERT INTO job_employment_types (name, slug) VALUES
('Full Time', 'full-time'),
('Part Time', 'part-time'),
('Contract', 'contract'),
('Freelance', 'freelance'),
('Internship', 'internship')
ON CONFLICT (slug) DO NOTHING;

-- Job experience levels
CREATE TABLE IF NOT EXISTS job_experience_levels (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(100) NOT NULL,
  slug VARCHAR(100) UNIQUE NOT NULL,
  years_min INTEGER,
  years_max INTEGER,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert default experience levels
INSERT INTO job_experience_levels (name, slug, years_min, years_max) VALUES
('Entry Level', 'entry-level', 0, 2),
('Junior', 'junior', 1, 3),
('Mid Level', 'mid-level', 3, 5),
('Senior', 'senior', 5, 10),
('Lead / Manager', 'lead-manager', 7, NULL),
('Executive', 'executive', 10, NULL)
ON CONFLICT (slug) DO NOTHING;

-- Job metadata table (stores all job-specific fields)
CREATE TABLE IF NOT EXISTS job_post_meta (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  post_id UUID NOT NULL UNIQUE,
  
  -- Company Information
  job_company_name VARCHAR(200),
  job_company_logo VARCHAR(500),
  job_company_website VARCHAR(500),
  
  -- Job Details
  job_employment_type_id UUID,
  job_experience_level_id UUID,
  job_salary_min DECIMAL(12, 2),
  job_salary_max DECIMAL(12, 2),
  job_salary_currency VARCHAR(10) DEFAULT 'IDR',
  job_salary_period VARCHAR(50) DEFAULT 'monthly',
  job_is_salary_negotiable BOOLEAN DEFAULT false,
  
  -- Location (using Indonesian regional tables)
  job_province_id CHAR(2),
  job_regency_id CHAR(4),
  job_district_id CHAR(6),
  job_village_id CHAR(10),
  job_address_detail TEXT,
  job_is_remote BOOLEAN DEFAULT false,
  job_is_hybrid BOOLEAN DEFAULT false,
  
  -- Application Details
  job_application_email VARCHAR(200),
  job_application_url VARCHAR(500),
  job_application_deadline TIMESTAMP,
  
  -- Additional Fields
  job_skills TEXT[], -- Array of required skills
  job_benefits TEXT[], -- Array of benefits
  job_requirements TEXT, -- Detailed requirements
  job_responsibilities TEXT, -- Detailed responsibilities
  
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  -- Foreign Keys
  CONSTRAINT fk_job_post FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
  CONSTRAINT fk_job_employment_type FOREIGN KEY (job_employment_type_id) REFERENCES job_employment_types(id) ON DELETE SET NULL,
  CONSTRAINT fk_job_experience_level FOREIGN KEY (job_experience_level_id) REFERENCES job_experience_levels(id) ON DELETE SET NULL,
  CONSTRAINT fk_job_province FOREIGN KEY (job_province_id) REFERENCES reg_provinces(id) ON DELETE SET NULL,
  CONSTRAINT fk_job_regency FOREIGN KEY (job_regency_id) REFERENCES reg_regencies(id) ON DELETE SET NULL,
  CONSTRAINT fk_job_district FOREIGN KEY (job_district_id) REFERENCES reg_districts(id) ON DELETE SET NULL,
  CONSTRAINT fk_job_village FOREIGN KEY (job_village_id) REFERENCES reg_villages(id) ON DELETE SET NULL
);

-- Junction table: Job Posts <-> Job Categories
CREATE TABLE IF NOT EXISTS job_post_categories (
  post_id UUID NOT NULL,
  category_id UUID NOT NULL,
  PRIMARY KEY (post_id, category_id),
  CONSTRAINT fk_job_post_cat_post FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
  CONSTRAINT fk_job_post_cat_category FOREIGN KEY (category_id) REFERENCES job_categories(id) ON DELETE CASCADE
);

-- Junction table: Job Posts <-> Job Tags
CREATE TABLE IF NOT EXISTS job_post_tags (
  post_id UUID NOT NULL,
  tag_id UUID NOT NULL,
  PRIMARY KEY (post_id, tag_id),
  CONSTRAINT fk_job_post_tag_post FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
  CONSTRAINT fk_job_post_tag_tag FOREIGN KEY (tag_id) REFERENCES job_tags(id) ON DELETE CASCADE
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_job_meta_employment_type ON job_post_meta(job_employment_type_id);
CREATE INDEX IF NOT EXISTS idx_job_meta_experience_level ON job_post_meta(job_experience_level_id);
CREATE INDEX IF NOT EXISTS idx_job_meta_province ON job_post_meta(job_province_id);
CREATE INDEX IF NOT EXISTS idx_job_meta_regency ON job_post_meta(job_regency_id);
CREATE INDEX IF NOT EXISTS idx_job_meta_district ON job_post_meta(job_district_id);
CREATE INDEX IF NOT EXISTS idx_job_meta_salary_min ON job_post_meta(job_salary_min);
CREATE INDEX IF NOT EXISTS idx_job_meta_deadline ON job_post_meta(job_application_deadline);
CREATE INDEX IF NOT EXISTS idx_job_post_categories_post ON job_post_categories(post_id);
CREATE INDEX IF NOT EXISTS idx_job_post_categories_category ON job_post_categories(category_id);
CREATE INDEX IF NOT EXISTS idx_job_post_tags_post ON job_post_tags(post_id);
CREATE INDEX IF NOT EXISTS idx_job_post_tags_tag ON job_post_tags(tag_id);